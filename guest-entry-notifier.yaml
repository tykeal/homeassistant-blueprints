---
# SPDX-License-Identifier: MIT
blueprint:
  name: Guest Entry Notifier (v0.3)

  description: |
    Basic thread starter for use with Rental Control and Zulip

  domain: automation

  input:
    notify_service:
      name: Zulip Notify
      description: |
        Notify service name to send to. Should be a Zulip (or compatible)
        notify service
      default: "zulip"
    guest_calendar:
      name: Guest Calendar
      description: The Calendar used for tracking guest
      selector:
        entity:
          domain: calendar
    guest_entry:
      name: Guest Entry Helper
      description: |
        Helper boolean for tracking if the guest thread has been starter
      selector:
        entity:
          domain: input_boolean
      default: "input_boolean.guest_entry"
    lock:
      name: Keymaster Lock
      description: |
        The Keymaster lock to monitor for unlock events
      selector:
        entity:
          domain: lock
      default: "lock.front_door"
    slot_min:
      name: Minimum slot number
      description: |
        The slot number minimum for guests
      selector:
        number:
          min: 1
          max: 30
      default: 6
    slot_max:
      name: Max slot number
      description: |
        The slot number maximum for guests
      selector:
        number:
          min: 1
          max: 30
      default: 10
    topic:
      name: Zulip Topic
      description: |
        The Zulip topic to use for guest notifications. If left blank, the topic
        will be set to the slot number.
      selector:
        text:
          multiline: false
          type: text
      default: ""
    separate_topics:
      name: Separate Topics
      description: |
        If true, each guest will have their own Zulip topic. If false, all
        guests will be in the same topic.
      selector:
        boolean:
      default: false

mode: single

trigger:
  - platform: event
    event_type: keymaster_lock_state_changed
    event_data:
      state: unlocked
    id: unlock
    variables:
      slot_name: |-
        {%- if trigger.event.data.code_slot_name == "" -%}
          Manual
        {%- else -%}
          {{ trigger.event.data.code_slot_name }}
        {%- endif -%}
      slot_num: "{{ trigger.event.data.code_slot }}"
      lock: "{{ trigger.event.data.entity_id }}"
  - platform: calendar
    event: end
    offset: "0:0:0"
    entity_id: !input guest_calendar
    id: guest_checkout

variables:
  input_notify_service: !input notify_service
  input_lock: !input lock
  input_separate_topics: !input separate_topics
  input_slot_min: !input slot_min
  input_slot_max: !input slot_max
  # yamllint disable-line rule:line-length
  notify_target: "{{ input_notify_service | lower | replace('notify.', '') | replace(' ', '_') }}"
  input_topic: !input topic

action:
  - choose:
      - alias: Door Unlocked
        conditions:
          - condition: trigger
            id:
              - unlock
        sequence:
          - choose:
              - alias: Guest Check-in Notification
                conditions:
                  - condition: and
                    conditions:
                      - "{{ slot_num >= input_slot_min }}"
                      - "{{ slot_num <= input_slot_max }}"
                      - "{{ lock == input_lock }}"
                      - condition: state
                        entity_id: !input guest_entry
                        state: "off"
                sequence:
                  - service: input_boolean.turn_on
                    target:
                      entity_id: !input guest_entry
                  - service: notify.{{ notify_target }}
                    data:
                      # yamllint disable-line rule:line-length
                      title: "Guest {% if input_separate_topics %}{{ slot_name }}{% else %}{{ input_topic }}{%- endif -%}"
                      message: "Guest has checked-in"
      - alias: Guest checkout
        conditions:
          - condition: trigger
            id:
              - guest_checkout
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: !input guest_entry
